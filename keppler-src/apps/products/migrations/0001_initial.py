# Generated by Django 4.2.8 on 2024-01-05 04:04

import autoslug.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(max_length=250, verbose_name="Product Title"),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        always_update=True,
                        editable=False,
                        populate_from="title",
                        unique=True,
                    ),
                ),
                (
                    "ref_code",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        unique=True,
                        verbose_name="Product Reference Code",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        default="Introducing the all-new and phenominal product of the century.",
                        verbose_name="Product Description",
                    ),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        default="CA", max_length=2, verbose_name="Country"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        default="Edmonton", max_length=180, verbose_name="City"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        default="T6Y2V5", max_length=100, verbose_name="Postal Code"
                    ),
                ),
                (
                    "street_address",
                    models.CharField(
                        default="2645 Summers Street 28A Ave",
                        max_length=250,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=9,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.05,
                        help_text="5% goods and services tax charged",
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Tax",
                    ),
                ),
                (
                    "cover_photo",
                    models.ImageField(
                        blank=True,
                        default="/product_sample.jpg",
                        null=True,
                        upload_to="",
                        verbose_name="Main Product Image",
                    ),
                ),
                (
                    "photo1",
                    models.ImageField(
                        blank=True,
                        default="/product_sample.jpg",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "photo2",
                    models.ImageField(
                        blank=True,
                        default="/product_sample.jpg",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "photo3",
                    models.ImageField(
                        blank=True,
                        default="/product_sample.jpg",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "photo4",
                    models.ImageField(
                        blank=True,
                        default="/product_sample.jpg",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        blank=True, max_length=100, unique=True, verbose_name="SKU"
                    ),
                ),
                (
                    "advert_type",
                    models.CharField(
                        choices=[
                            ("Preorder", "Preorder"),
                            ("Limited Edition", "Limited Edition"),
                            ("Exclusive", "Exclusive"),
                            ("Clearance", "Clearance"),
                            ("Used", "Used"),
                            ("Refurbished", "Refurbished"),
                            ("Handmade", "Handmade"),
                            ("Vintage", "Vintage"),
                            ("Collectible", "Collectible"),
                            ("Customizable", "Customizable"),
                            ("Bundle", "Bundle"),
                            ("Digital Download", "Digital Download"),
                            ("Subscription", "Subscription"),
                            ("Other", "Other"),
                        ],
                        default="Other",
                        max_length=50,
                        verbose_name="Advert Type",
                    ),
                ),
                (
                    "product_type",
                    models.CharField(
                        choices=[
                            ("Electronics", "Electronics"),
                            ("Books", "Books"),
                            ("Clothing", "Clothing"),
                            ("Beauty", "Beauty"),
                            ("Home Appliances", "Home Appliances"),
                            ("Toys", "Toys"),
                            ("Sports", "Sports"),
                            ("Grocery", "Grocery"),
                            ("Automotive", "Automotive"),
                            ("Music", "Music"),
                            ("Health", "Health"),
                            ("Garden", "Garden"),
                            ("Pet Supplies", "Pet Supplies"),
                            ("Other", "Other"),
                        ],
                        default="Other",
                        max_length=80,
                        verbose_name="Product Type",
                    ),
                ),
                (
                    "product_status",
                    models.CharField(
                        choices=[
                            ("Active", "Active"),
                            ("Discontinued", "Discontinued"),
                            ("Out of Stock", "Out of Stock"),
                        ],
                        default="Active",
                        max_length=50,
                        verbose_name="Status",
                    ),
                ),
                (
                    "length",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Length",
                    ),
                ),
                (
                    "width",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Width",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Height",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Weight",
                    ),
                ),
                (
                    "average_rating",
                    models.FloatField(
                        blank=True,
                        default=0.0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Average Rating",
                    ),
                ),
                (
                    "review_count",
                    models.PositiveIntegerField(
                        blank=True, default=0, null=True, verbose_name="Review Count"
                    ),
                ),
                (
                    "published_status",
                    models.BooleanField(default=False, verbose_name="Published Status"),
                ),
                ("views", models.IntegerField(default=0, verbose_name="Total Views")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="seller_customer",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Seller or Customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
            },
        ),
        migrations.CreateModel(
            name="ProductViews",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("ip", models.CharField(max_length=250, verbose_name="IP Adress")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_views",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Views on Product",
                "verbose_name_plural": "Product Views",
            },
        ),
    ]
