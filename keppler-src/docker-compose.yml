version: "3.9"

services:
    api:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start
        volumes:
            - .:/app
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        expose:
            - "8000"
        env_file:
            - .env
        depends_on:
            - postgres-db
            - redis
        networks:
            - keppler-react

    client:
        build:
            context: ./client
            dockerfile: ./docker/local/Dockerfile
        restart: on-failure
        volumes:
            - ./client:/app
            - /app/node_modules
        networks:
            - keppler-react

    postgres-db:
        image: postgres:15.0-alpine
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        networks:
          - keppler-react
    
    redis:
        image: redis:7.2-alpine
        networks:
            - keppler-react
    
    celery_worker:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start-celeryworker
        volumes:
            - .:/app
        env_file:
            - .env
        depends_on:
            - redis
            - postgres-db
        networks:
            - keppler-react
    
    flower:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start-flower
        volumes:
            - .:/app
        env_file:
            - .env
        ports:
            - "5557:5555"
        depends_on:
            - redis
            - postgres-db
        networks:
            - keppler-react
    
    nginx:
        restart: always
        depends_on:
            - api
        volumes:
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        build:
            context: ./docker/local/nginx
            dockerfile: Dockerfile
        ports:
            - "8080:80"
        networks:
            - keppler-react
        
networks:
    keppler-react:
        driver: bridge

volumes:
    postgres_data:
    static_volume:
    media_volume: